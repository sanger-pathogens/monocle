schema {
  query: Query
  mutation: Mutation
}

scalar DateTime

scalar GenericScalar

type Institution {
  name: String!
  country: String!
  latitude: Float,
  longitude: Float,
  affiliatedMembers: [User!]!
  samples: [Sample!]!
}

type Mutation {
  tokenAuth(email: String!, password: String!): ObtainJSONWebToken
  verifyToken(token: String): Verify
  refreshToken(token: String): Refresh
}

type ObtainJSONWebToken {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type Query {
  me: User
  samples: [Sample]
  institutions: [Institution]
}

type Refresh {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type Sample {
  sampleId: String!
  laneId: String!
  publicName: String!
  hostStatus: SampleHostStatus!
  serotype: SampleSerotype!
  submittingInstitution: Institution!
}

enum SampleHostStatus {
  CARRIAGE
  SEPSIS
  BACTERAEMIA
  MENINGITIS
  PNEUMONIA
  URINARY_TRACT_INFECTION
  SKIN_AND_SOFT_TISSUE_INFECTION
  OSTEOMYELITIS
  ENDOCARDITIS
  SEPTIC_ARTHRITIS
  CHORIOAMNIONITIS
  PERITONITIS
  EMPYEMA
  SURGICAL_SITE_INFECTION
  UROSEPSIS
  ENDOMETRITIS
  MASTITIS
  DISEASE_OTHER
}

enum SampleSerotype {
  IA
  IB
  II
  III
  IV
  V
  VI
  VII
  VIII
  IX
  NT
  UNKNOWN
}

type User {
  password: String!
  lastLogin: DateTime
  email: String!
  firstName: String!
  lastName: String!
  affiliations: [Institution!]!
}

type Verify {
  payload: GenericScalar!
}
