openapi: '3.0.0'
info:
  title: "Monocle Dashboard API"
  version: "0.0.1"
  description: "A REST API service used by the Monocle dashboard."
  contact:
    email: "path-help@sanger.ac.uk"

servers:
  - url: /dashboard-api
    description: Context path

paths:
  /get_user_details:
    get:
      operationId: dash.api.routes.get_user_details
      summary: "Return all details for a user"
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. A user details record is returned."
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_details:
                    $ref: "#/components/schemas/UserData"
        403:
          description: "Authorization information is missing or invalid."

  /get_batches:
    get:
      operationId: dash.api.routes.get_batches
      summary: "Return information on batches delivered, keyed by institution id."
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. Returned data will be keyed on institution id, shown as additionalProp in the example below..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  batches:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/InstitutionBatchSummary"
        403:
          description: "Authorization information is missing or invalid."

  /sequencing_status_summary:
    get:
      operationId: dash.api.routes.sequencing_status_summary
      summary: "Return information on sample/lane sequencing status, keyed by institution id."
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. Returned data will be keyed on institution id, shown as additionalProp in the example below..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequencing_status:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/InstitutionSequencingStatus"
        403:
          description: "Authorization information is missing or invalid."

  /pipeline_status_summary:
    get:
      operationId: dash.api.routes.pipeline_status_summary
      summary: "Return information on sample/lane pipeline status, keyed by institution id."
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. Returned data will be keyed on institution id, shown as additionalProp in the example below..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequencing_status:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/InstitutionPipelineStatus"
        403:
          description: "Authorization information is missing or invalid."

  /bulk_download_info:
    post:
      operationId: dash.api.routes.bulk_download_info
      summary: "Return information on expected bulk download based on standard sample filters and data types"
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkDownloadInput"
      responses:
        200:
          description: "The operation was successful. The following data format will be returned..."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadInfo"
        403:
          description: "Authorization information is missing or invalid."

  /bulk_download_urls:
    post:
      operationId: dash.api.routes.bulk_download_urls
      summary: "Return download links corresponding to standard sample filters and data types"
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkDownloadInput"
      responses:
        200:
          description: "The operation was successful. The following data format will be returned..."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadInfo"
        403:
          description: "Authorization information is missing or invalid."

  /get_progress:
    get:
      operationId: dash.api.routes.get_progress
      summary: "Return the information necessary for plotting the project sample progress graph."
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. The following data format will be returned..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  progress_graph:
                    $ref: "#/components/schemas/ProjectProgress"
        403:
          description: "Authorization information is missing or invalid."

  /get_institutions:
    get:
      operationId: dash.api.routes.get_institutions
      summary: "Return a list of institutions."
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      responses:
        200:
          description: "The operation was successful. Returned data will be keyed on institution id, shown as additionalProp in the example below..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  institutions:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Institution"
        403:
          description: "Authorization information is missing or invalid."
          
  /get_metadata:
    post:
      operationId: dash.api.routes.get_metadata
      summary: "Return metadta for samples matching standard sample filters"
      parameters:
        - name: X-Remote-User
          in: header
          description: "Username."
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SampleFilters"
      responses:
        200:
          description: "The operation was successful. The following data format will be returned..."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SampleMetadata"
        403:
          description: "Authorization information is missing or invalid."
          
  /get_metadata_for_download/{institution}/{category}/{status}:
    get:
      operationId: dash.api.routes.get_metadata_for_download
      summary: "The operation was successful. The following data format will be returned..."
      parameters:
        - in: header
          name: X-Remote-User
          description: "Username."
          required: false
          schema:
            type: string
        - name: "institution"
          in: path
          description: "The institution name."
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 256
            pattern: ^[a-zA-Z0-9à-úÀ-Ú _\-',;:\.\(\)]*$
        - name: "category"
          in: path
          description: "The category to be downloaded: sequencing or pipeline."
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 20
            pattern: ^[a-zA-Z]*$
        - name: "status"
          in: path
          description: "The status type to be downloaded: successful or failed."
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 20
            pattern: ^[a-zA-Z]*$
      responses:
        200:
          description: "The operation was successful."
          content:
            text/csv:
              schema:
                type: string
                format: binary
        403:
          description: "Authorization information is missing or invalid."

components:
  schemas:

    UserInstitution:
      type: object
      required:
        - "inst_id"
        - "inst_name"
      properties:
        inst_id:
          type: string
          description: "The id of the institution."
        inst_name:
          type: string
          description: "The name of the institution."

    Institution:
      type: object
      required:
        - name
        - db_key
      properties:
        name:
          type: string
          description: "The name of the institution."
        db_key:
          type: string
          description: "The id of the institution."

    SampleFilters:
      type: object
      properties:
        batches:
          type: array
          items:
            $ref: "#/components/schemas/InstKeyBatchDatePair"
        serotypes:
          type: array
          items:
            $ref: "#/components/schemas/Serotype"

    Serotype:
      type: string
      example: "IV"
      
    SampleMetadata:
      type: object
      required:
        - "sanger_sample_id"
        - "lane_id"
        - "submitting_institution"
        - "supplier_sample_name"
        - "public_name"
        - "host_status"
        - "study_name"
        - "study_ref"
        - "selection_random"
        - "country"
        - "county_state"
        - "city"
        - "collection_year"
        - "collection_month"
        - "collection_day"
        - "host_species"
        - "gender"
        - "age_group"
        - "age_years"
        - "age_months"
        - "age_weeks"
        - "age_days"
        - "disease_type"
        - "disease_onset"
        - "isolation_source"
        - "serotype"
        - "serotype_method"
        - "infection_during_pregnancy"
        - "maternal_infection_type"
        - "gestational_age_weeks"
        - "birth_weight_gram"
        - "apgar_score"
        - "ceftizoxime"
        - "ceftizoxime_method"
        - "cefoxitin"
        - "cefoxitin_method"
        - "cefotaxime"
        - "cefotaxime_method"
        - "cefazolin"
        - "cefazolin_method"
        - "ampicillin"
        - "ampicillin_method"
        - "penicillin"
        - "penicillin_method"
        - "erythromycin"
        - "erythromycin_method"
        - "clindamycin"
        - "clindamycin_method"
        - "tetracycline"
        - "tetracycline_method"
        - "levofloxacin"
        - "levofloxacin_method"
        - "ciprofloxacin"
        - "ciprofloxacin_method"
        - "daptomycin"
        - "daptomycin_method"
        - "vancomycin"
        - "vancomycin_method"
        - "linezolid"
        - "linezolid_method"
      properties:
        sanger_sample_id:
          $ref: "#/components/schemas/DownloadField"
        lane_id:
          $ref: "#/components/schemas/DownloadField"
        submitting_institution:
          $ref: "#/components/schemas/DownloadField"
        supplier_sample_name:
          $ref: "#/components/schemas/DownloadField"
        public_name:
          $ref: "#/components/schemas/DownloadField"
        host_status:
          $ref: "#/components/schemas/DownloadField"
        study_name:
          $ref: "#/components/schemas/DownloadField"
        study_ref:
          $ref: "#/components/schemas/DownloadField"
        selection_random:
          $ref: "#/components/schemas/DownloadField"
        country:
          $ref: "#/components/schemas/DownloadField"
        county_state:
          $ref: "#/components/schemas/DownloadField"
        city:
          $ref: "#/components/schemas/DownloadField"
        collection_year:
          $ref: "#/components/schemas/DownloadField"
        collection_month:
          $ref: "#/components/schemas/DownloadField"
        collection_day:
          $ref: "#/components/schemas/DownloadField"
        host_species:
          $ref: "#/components/schemas/DownloadField"
        gender:
          $ref: "#/components/schemas/DownloadField"
        age_group:
          $ref: "#/components/schemas/DownloadField"
        age_years:
          $ref: "#/components/schemas/DownloadField"
        age_months:
          $ref: "#/components/schemas/DownloadField"
        age_weeks:
          $ref: "#/components/schemas/DownloadField"
        age_days:
          $ref: "#/components/schemas/DownloadField"
        disease_type:
          $ref: "#/components/schemas/DownloadField"
        disease_onset:
          $ref: "#/components/schemas/DownloadField"
        isolation_source:
          $ref: "#/components/schemas/DownloadField"
        serotype:
          $ref: "#/components/schemas/DownloadField"
        serotype_method:
          $ref: "#/components/schemas/DownloadField"
        infection_during_pregnancy:
          $ref: "#/components/schemas/DownloadField"
        maternal_infection_type:
          $ref: "#/components/schemas/DownloadField"
        gestational_age_weeks:
          $ref: "#/components/schemas/DownloadField"
        birth_weight_gram:
          $ref: "#/components/schemas/DownloadField"
        apgar_score:
          $ref: "#/components/schemas/DownloadField"
        ceftizoxime:
          $ref: "#/components/schemas/DownloadField"
        ceftizoxime_method:
          $ref: "#/components/schemas/DownloadField"
        cefoxitin:
          $ref: "#/components/schemas/DownloadField"
        cefoxitin_method:
          $ref: "#/components/schemas/DownloadField"
        cefotaxime:
          $ref: "#/components/schemas/DownloadField"
        cefotaxime_method:
          $ref: "#/components/schemas/DownloadField"
        cefazolin:
          $ref: "#/components/schemas/DownloadField"
        cefazolin_method:
          $ref: "#/components/schemas/DownloadField"
        ampicillin:
          $ref: "#/components/schemas/DownloadField"
        ampicillin_method:
          $ref: "#/components/schemas/DownloadField"
        penicillin:
          $ref: "#/components/schemas/DownloadField"
        penicillin_method:
          $ref: "#/components/schemas/DownloadField"
        erythromycin:
          $ref: "#/components/schemas/DownloadField"
        erythromycin_method:
          $ref: "#/components/schemas/DownloadField"
        clindamycin:
          $ref: "#/components/schemas/DownloadField"
        clindamycin_method:
          $ref: "#/components/schemas/DownloadField"
        tetracycline:
          $ref: "#/components/schemas/DownloadField"
        tetracycline_method:
          $ref: "#/components/schemas/DownloadField"
        levofloxacin:
          $ref: "#/components/schemas/DownloadField"
        levofloxacin_method:
          $ref: "#/components/schemas/DownloadField"
        ciprofloxacin:
          $ref: "#/components/schemas/DownloadField"
        ciprofloxacin_method:
          $ref: "#/components/schemas/DownloadField"
        daptomycin:
          $ref: "#/components/schemas/DownloadField"
        daptomycin_method:
          $ref: "#/components/schemas/DownloadField"
        vancomycin:
          $ref: "#/components/schemas/DownloadField"
        vancomycin_method:
          $ref: "#/components/schemas/DownloadField"
        linezolid:
          $ref: "#/components/schemas/DownloadField"
        linezolid_method:
          $ref: "#/components/schemas/DownloadField"

    BulkDownloadInput:
      type: object
      required:
        - sample filters
      properties:
        sample filters:
          $ref: "#/components/schemas/SampleFilters"
        assemblies:
          type: boolean
        annotations:
          type: boolean
        reads:
          type: boolean
          
    InstKeyBatchDatePair:
      type: object
      required:
        - "institution key"
        - "batch date"
      description: "Batch of samples, identified by institution and delivery date"
      properties:
        institution key:
          description: "Instiution key"
          example: "NatRefLab"
          type: string
        batch date:
          description: "Date of delivery"
          $ref: "#/components/schemas/BatchDate"
            
    BatchDate:
      type: string
      format: date
      example: "2019-11-15"

    DownloadInfo:
      type: object
      required:
        - num_samples
        - size
        - size_zipped
      properties:
        num_samples:
          type: integer
        size:
          type: string
        size_zipped:
          type: string
          
    ProjectProgress:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/ProjectProgressData"

    ProjectProgressData:
      type: object
      required:
        - "date"
        - "samples received"
        - "samples sequenced"
      description: "Progress graph data."
      properties:
        date:
          type: array
          items:
            description: "The batch date."
            example: "Jan 2019"
            type: string
        samples received:
          type: array
          items:
            description: "The number of samples received for the batch."
            example: 300
            type: string
        samples sequenced:
          type: array
          items:
            description: "The number of samples sequenced for the batch."
            example: 200
            type: string

    InstitutionBatchSummary:
      type: object
      required:
        - expected
        - received
        - deliveries
      description: "Sample batch information for an institution."
      properties:
        expected:
          description: "The number of samples expected."
          example: 200
          type: integer
        received:
          description: "The number of samples received."
          example: 200
          type: integer
        deliveries:
          type: array
          items:
            $ref: "#/components/schemas/Batch"
          description: "Information on all batches delivered."

    Batch:
      type: object
      required:
        - name
        - date
        - number
      description: "Sample batch information."
      properties:
        name:
          description: "The batch name."
          example: "Batch 1"
          type: string
        date:
          description: "The delivery date."
          example: "2019-09-18"
          type: string
        number:
          description: "The batch sample size."
          example: 200
          type: integer

    InstitutionSequencingStatus:
      type: object
      required:
        - received
        - completed
        - success
        - failed
        - fail_messages
      description: "Sequencing status summary information for an institution."
      properties:
        received:
          description: "The number of lanes received."
          example: 400
          type: integer
        completed:
          description: "The number of lanes that have completed sequencing, whether pass or fail."
          example: 300
          type: integer
        success:
          description: "The number of lanes that have successfully completed sequencing."
          example: 298
          type: integer
        failed:
          description: "The number of lanes that have failed sequencing."
          example: 2
          type: integer
        fail_messages:
          type: array
          items:
            $ref: "#/components/schemas/FailureInformation"
          description: "Error information on all sequencing failures."

    InstitutionPipelineStatus:
      type: object
      required:
        - running
        - completed
        - success
        - failed
        - fail_messages
      description: "Pathogen pipelines status summary information for an institution."
      properties:
        running:
          description: "The number of lanes currently running."
          example: 400
          type: integer
        completed:
          description: "The number of lanes that have completed pipelines, whether pass or fail."
          example: 300
          type: integer
        success:
          description: "The number of lanes that have successfully completed pipeline runs."
          example: 298
          type: integer
        failed:
          description: "The number of lanes that have failed their pipeline runs."
          example: 2
          type: integer
        fail_messages:
          type: array
          items:
            $ref: "#/components/schemas/FailureInformation"
          description: "Error information on all pipeline failures."

    FailureInformation:
      type: object
      required:
        - lane
        - stage
        - issue
      properties:
        lane:
          description: "The failed lane id."
          example: "31741_3#378"
          type: string
        stage:
          description: "The name of QC stage where issues was detected."
          example: "qc_lib"
          type: string
        issue:
          description: "The associated error message."
          example: "Error message"
          type: string

    UserData:
      type: object
      required:
        - "username"
        - "memberOf"
      properties:
        username:
          type: string
          description: "The username for this user"
        type:
          type: string
          description: "Optional employee user type field, e.g. admin"
        memberOf:
          type: array
          description: "A list of institutions for which the user is a member"
          items:
            $ref: "#/components/schemas/UserInstitution"
