# make content in this container directly accessible on port 8000
server {

   listen   8000;
   root     /usr/share/nginx/html;
   index    index.html;
   location / {
   }

}


# proxying is on port 80
server {

   listen   80;
   
   # make public files from this nginx available to all containers under /files
   # (don't use conventional path /static, as that's already used by the `ui` server
   # which is proxied from `/`)
   # TO DO:
   # move images or other static content from here rather than via individual application servers
   location /files/ {
      proxy_pass        http://localhost:8000/;
   }

   location /old-app/ {
      proxy_pass        http://ui:80/;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-NginX-Proxy true;
      proxy_redirect    off;
   }

   location /api/ {
      proxy_pass        http://api:80/;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-NginX-Proxy true;
      proxy_redirect    off;
      proxy_ssl_session_reuse off;
   }

   location / {
      proxy_pass        http://dash:80/dashboard/;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-NginX-Proxy true;
      proxy_redirect    off;
   }

   location /download/ {
      proxy_pass        http://dash:80/download/;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-NginX-Proxy true;
      proxy_redirect    off;
   }

   location /metadata/ {
      proxy_pass        http://metadata-api:80/metadata/;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  X-NginX-Proxy true;
      proxy_redirect    off;
   }
 
}
# end of server
