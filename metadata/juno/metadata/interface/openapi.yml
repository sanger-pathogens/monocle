openapi: 3.0.0
info:
  contact:
    email: path-help@sanger.ac.uk
  description: A REST API for accessing/updating JUNO sample metadata
  title: JUNO Sample Metadata API
  version: 0.0.1
servers:
- description: Context path
  url: /metadata/juno
paths:
  /delete_all_qc_data:
    get:
      operationId: metadata.api.routes.delete_all_qc_data_route
      responses:
        '200':
          description: The deletion was successful.
      summary: Delete all QC data
  /distinct_in_silico_values:
    post:
      operationId: metadata.api.routes.get_distinct_in_silico_values_route
      requestBody:
        content:
          application/json:
            example:
              fields:
              - cps_type
              - ST
              institutions:
              - National Reference Laboratories
            schema:
              properties:
                fields:
                  $ref: '#/components/schemas/InSilicoFieldsList'
                institutions:
                  items:
                    $ref: '#/components/schemas/FieldValueFilter'
                  type: array
              required:
              - fields
              - institutions
              type: object
        description: A list of in silico fields for which distinct values are required
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistinctValues'
          description: A dictionary of fields, each providing a list of distinct in
            silico values found.
        '404':
          description: A non-existent field was included in the request
      summary: Gather distinct in silico data values for certain fields
  /distinct_qc_data_values:
    post:
      operationId: metadata.api.routes.get_distinct_qc_data_values_route
      requestBody:
        content:
          application/json:
            example:
              fields:
              - rel_abun_sa
              institutions:
              - National Reference Laboratories
            schema:
              properties:
                fields:
                  $ref: '#/components/schemas/QCDataFieldsList'
                institutions:
                  items:
                    $ref: '#/components/schemas/FieldValueFilter'
                  type: array
              required:
              - fields
              - institutions
              type: object
        description: A list of QC data fields for which distinct values are required
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistinctValues'
          description: A dictionary of fields, each providing a list of distinct QC
            data values found.
        '404':
          description: A non-existent field was included in the request
      summary: Gather distinct QC data values for certain fields
  /distinct_values:
    post:
      operationId: metadata.api.routes.get_distinct_values_route
      requestBody:
        content:
          application/json:
            example:
              fields:
              - serotype
              - age_group
              institutions:
              - National Reference Laboratories
            schema:
              properties:
                fields:
                  $ref: '#/components/schemas/MetadataFieldsList'
                institutions:
                  items:
                    $ref: '#/components/schemas/FieldValueFilter'
                  type: array
              required:
              - fields
              - institutions
              type: object
        description: A list of fields for which distinct values are required
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistinctValues'
          description: A dictionary of fields, each providing a list of distinct metadata
            values found.
        '404':
          description: A non-existent field was included in the request
      summary: Gather distinct metadata values for certain fields
  /download:
    post:
      operationId: metadata.api.routes.get_download_metadata_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadSampleKeys'
        description: A list of Sanger sample IDs
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
          description: The download result set
        '400':
          description: Invalid arguments provided
        '404':
          description: No data could be found for the given download key
      summary: Download the metadata for the given download keys
  /download_in_silico_data:
    post:
      operationId: metadata.api.routes.get_download_in_silico_data_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadLaneKeys'
        description: A list of lane IDs
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InSilicoData'
          description: The download result set
        '400':
          description: Invalid arguments provided
        '404':
          description: No data could be found for the given download key
      summary: Download the in silico data for the given download keys
  /download_qc_data:
    post:
      operationId: metadata.api.routes.get_download_qc_data_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadLaneKeys'
        description: A list of lane IDs
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QCData'
          description: The download result set
        '400':
          description: Invalid arguments provided
        '404':
          description: No data could be found for the given download key
      summary: Download the QC data for the given download keys
  /in-silico-upload:
    post:
      operationId: metadata.api.routes.update_in_silico_data_route
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Spreadsheet'
      responses:
        '200':
          description: The upload succeeded
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: The file has not passed validation
      summary: Upload a new tab-delimited file of in silico data
  /institutions:
    get:
      operationId: metadata.api.routes.get_institution_names_route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institutions'
          description: The institution result set
        '404':
          description: Institutions could not be gathered from database
      summary: Gather the names for all institutions
  /lane_ids_matching_in_silico_data:
    post:
      operationId: metadata.api.routes.get_lanes_filtered_by_in_silico_data_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiltersInSilicoInput'
        description: An array of in silico filters
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lanes'
          description: List of lane ids
        '404':
          description: No data could be found for the given filters
      summary: Filter lanes according to in silico data values, and return matching
        lane IDs
  /metadata-upload:
    post:
      operationId: metadata.api.routes.update_sample_metadata_route
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Spreadsheet'
      responses:
        '200':
          description: The upload succeeded
        '400':
          content:
            application/json:
              schema:
                properties:
                  errors:
                    $ref: '#/components/schemas/ValidationErrors'
                type: object
          description: The file has not passed validation
      summary: Upload a new tab-delimited file of metadata
  /qc-data-upload:
    post:
      operationId: metadata.api.routes.update_qc_data_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QCDataUpdates'
        description: A list of dictionaries of QC data
        required: true
      responses:
        '200':
          description: The update succeeded
        '400':
          description: The update request was not valid.
      summary: Update QC data
  /sample_ids_matching_metadata:
    post:
      operationId: metadata.api.routes.get_samples_filtered_by_metadata_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiltersInput'
        description: An array of metadata filters
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Samples'
          description: List of Sanger sample ids
        '404':
          description: No data could be found for the given filters
      summary: Filter samples according to metadata values, and return matching Sanger
        sample IDs
  /samples:
    get:
      operationId: metadata.api.routes.get_samples_route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
          description: The sample result set
        '404':
          description: No data could be found for the given institutions or filters
      summary: Gather all sample records
components:
  schemas:
    DistinctValues:
      description: Object containing an array of fields, and the distinct values from
        the db for each
      properties:
        distinct_values:
          items:
            properties:
              name:
                description: The name of the metadata field
                readOnly: true
                type: string
              values:
                items:
                  description: The value of the metadata field
                  nullable: true
                  readOnly: true
                  type: string
                type: array
            required:
            - field
            - distinct_values
            type: object
          type: array
      type: object
    DistinctValuesInput:
      properties:
        fields:
          $ref: '#/components/schemas/MetadataFieldsList'
        institutions:
          items:
            $ref: '#/components/schemas/FieldValueFilter'
          type: array
      required:
      - fields
      - institutions
      type: object
    DownloadField:
      properties:
        order:
          description: An ordering integer index for the field
          readOnly: true
          type: integer
        title:
          description: The name of the metadata field
          readOnly: true
          type: string
        value:
          description: The value of the metadata field
          readOnly: true
          type: string
      required:
      - title
      - value
      - order
      type: object
    DownloadLaneKeys:
      description: A list of lane IDs
      example:
      - 39214_1#341
      - 32820_2#33
      items:
        maxLength: 16
        minLength: 3
        pattern: ^[0-9_#]+$
        type: string
      minItems: 1
      type: array
    DownloadSampleKeys:
      description: A list of Sanger sample IDs
      example:
      - 5903STDY8059122
      - 5903STDY8059054
      items:
        maxLength: 256
        minLength: 3
        pattern: ^[a-zA-Z0-9]*$
        type: string
      minItems: 1
      type: array
    FieldValueFilter:
      description: A valid metadata field value (multiple consecutive whitespaces
        and hyphens not allowed)
      maxLength: 256
      minLength: 1
      nullable: true
      pattern: "^(([a-zA-Z0-9\xE0-\xFA\xC0-\xDA\\_',;:/\\.\\(\\)\\[\\]]+)\\-?\\ ?)+$"
      type: string
    FiltersInSilicoInput:
      items:
        $ref: '#/components/schemas/InSilicoFilters'
      minItems: 1
      type: array
    FiltersInput:
      items:
        $ref: '#/components/schemas/MetadataFilters'
      minItems: 1
      type: array
    InSilicoData:
      description: Object containing an array of lane ids and their in silico data
      properties:
        insilicodata:
          items:
            properties:
              AAC6APH2:
                $ref: '#/components/schemas/DownloadField'
              AADECC:
                $ref: '#/components/schemas/DownloadField'
              ALP1:
                $ref: '#/components/schemas/DownloadField'
              ALP23:
                $ref: '#/components/schemas/DownloadField'
              ALPHA:
                $ref: '#/components/schemas/DownloadField'
              ANT6:
                $ref: '#/components/schemas/DownloadField'
              APH3III:
                $ref: '#/components/schemas/DownloadField'
              APH3OTHER:
                $ref: '#/components/schemas/DownloadField'
              CATPC194:
                $ref: '#/components/schemas/DownloadField'
              CATQ:
                $ref: '#/components/schemas/DownloadField'
              ERMA:
                $ref: '#/components/schemas/DownloadField'
              ERMB:
                $ref: '#/components/schemas/DownloadField'
              ERMT:
                $ref: '#/components/schemas/DownloadField'
              FOSA:
                $ref: '#/components/schemas/DownloadField'
              GYRA:
                $ref: '#/components/schemas/DownloadField'
              GYRA_variant:
                $ref: '#/components/schemas/DownloadField'
              HVGA:
                $ref: '#/components/schemas/DownloadField'
              LNUB:
                $ref: '#/components/schemas/DownloadField'
              LNUC:
                $ref: '#/components/schemas/DownloadField'
              LSAC:
                $ref: '#/components/schemas/DownloadField'
              MEFA:
                $ref: '#/components/schemas/DownloadField'
              MPHC:
                $ref: '#/components/schemas/DownloadField'
              MSRA:
                $ref: '#/components/schemas/DownloadField'
              MSRD:
                $ref: '#/components/schemas/DownloadField'
              PARC:
                $ref: '#/components/schemas/DownloadField'
              PARC_variant:
                $ref: '#/components/schemas/DownloadField'
              PI1:
                $ref: '#/components/schemas/DownloadField'
              PI2A1:
                $ref: '#/components/schemas/DownloadField'
              PI2A2:
                $ref: '#/components/schemas/DownloadField'
              PI2B:
                $ref: '#/components/schemas/DownloadField'
              RIB:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_1:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_1_variant:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_2:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_2_variant:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_3:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_3_variant:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_4:
                $ref: '#/components/schemas/DownloadField'
              RPOBGBS_4_variant:
                $ref: '#/components/schemas/DownloadField'
              SRR1:
                $ref: '#/components/schemas/DownloadField'
              SRR2:
                $ref: '#/components/schemas/DownloadField'
              ST:
                $ref: '#/components/schemas/DownloadField'
              SUL2:
                $ref: '#/components/schemas/DownloadField'
              TETB:
                $ref: '#/components/schemas/DownloadField'
              TETL:
                $ref: '#/components/schemas/DownloadField'
              TETM:
                $ref: '#/components/schemas/DownloadField'
              TETO:
                $ref: '#/components/schemas/DownloadField'
              TETS:
                $ref: '#/components/schemas/DownloadField'
              adhP:
                $ref: '#/components/schemas/DownloadField'
              atr:
                $ref: '#/components/schemas/DownloadField'
              cps_type:
                $ref: '#/components/schemas/DownloadField'
              glcK:
                $ref: '#/components/schemas/DownloadField'
              glnA:
                $ref: '#/components/schemas/DownloadField'
              lane_id:
                $ref: '#/components/schemas/DownloadField'
              pheS:
                $ref: '#/components/schemas/DownloadField'
              sdhA:
                $ref: '#/components/schemas/DownloadField'
              tkt:
                $ref: '#/components/schemas/DownloadField'
              twenty_three_S1:
                $ref: '#/components/schemas/DownloadField'
              twenty_three_S1_variant:
                $ref: '#/components/schemas/DownloadField'
              twenty_three_S3:
                $ref: '#/components/schemas/DownloadField'
              twenty_three_S3_variant:
                $ref: '#/components/schemas/DownloadField'
            required:
            - lane_id
            - cps_type
            - ST
            - adhP
            - pheS
            - atr
            - glnA
            - sdhA
            - glcK
            - tkt
            - twenty_three_S1
            - twenty_three_S3
            - AAC6APH2
            - AADECC
            - ANT6
            - APH3III
            - APH3OTHER
            - CATPC194
            - CATQ
            - ERMA
            - ERMB
            - ERMT
            - LNUB
            - LNUC
            - LSAC
            - MEFA
            - MPHC
            - MSRA
            - MSRD
            - FOSA
            - GYRA
            - PARC
            - RPOBGBS_1
            - RPOBGBS_2
            - RPOBGBS_3
            - RPOBGBS_4
            - SUL2
            - TETB
            - TETL
            - TETM
            - TETO
            - TETS
            - ALP1
            - ALP23
            - ALPHA
            - HVGA
            - PI1
            - PI2A1
            - PI2A2
            - PI2B
            - RIB
            - SRR1
            - SRR2
            - twenty_three_S1_variant
            - twenty_three_S3_variant
            - GYRA_variant
            - PARC_variant
            - RPOBGBS_1_variant
            - RPOBGBS_2_variant
            - RPOBGBS_3_variant
            - RPOBGBS_4_variant
            type: object
          type: array
      type: object
    InSilicoFieldName:
      description: Valid in silico field name (alphanumeric and underscore only)
      maxLength: 256
      minLength: 1
      pattern: ^lane_id|cps_type|ST|adhP|pheS|atr|glnA|sdhA|glcK|tkt|twenty_three_S1|twenty_three_S3|AAC6APH2|AADECC|ANT6|APH3III|APH3OTHER|CATPC194|CATQ|ERMA|ERMB|ERMT|LNUB|LNUC|LSAC|MEFA|MPHC|MSRA|MSRD|FOSA|GYRA|PARC|RPOBGBS_1|RPOBGBS_2|RPOBGBS_3|RPOBGBS_4|SUL2|TETB|TETL|TETM|TETO|TETS|ALP1|ALP23|ALPHA|HVGA|PI1|PI2A1|PI2A2|PI2B|RIB|SRR1|SRR2|twenty_three_S1_variant|twenty_three_S3_variant|GYRA_variant|PARC_variant|RPOBGBS_1_variant|RPOBGBS_2_variant|RPOBGBS_3_variant|RPOBGBS_4_variant$
      type: string
    InSilicoFieldValueFilter:
      description: A valid in silico field value (multiple consecutive whitespaces
        and hyphens not allowed)
      maxLength: 256
      minLength: 1
      nullable: true
      pattern: ^([a-zA-Z0-9_\*\?\-/]+)$
      type: string
    InSilicoFieldsList:
      items:
        $ref: '#/components/schemas/InSilicoFieldName'
      minItems: 1
      type: array
    InSilicoFilters:
      example:
        name: ST
        values:
        - '1'
        - '14'
        - ST-I
        - 103*?
      properties:
        name:
          $ref: '#/components/schemas/InSilicoFieldName'
          description: The name of the in silico field
        values:
          items:
            $ref: '#/components/schemas/InSilicoFieldValueFilter'
            description: List of desired values of the in silico field
          minItems: 1
          type: array
      type: object
    Institutions:
      description: Object with list of institutions.
      properties:
        institutions:
          items:
            maxLength: 256
            minLength: 3
            type: string
          minItems: 1
          readOnly: true
          type: array
      type: object
    Lanes:
      example:
      - 39214_1#341
      - 32820_2#33
      items:
        maxLength: 16
        minLength: 3
        pattern: ^[0-9_#]+$
        type: string
      minItems: 1
      type: array
    Metadata:
      description: Object containing an array of Sanger sample ids and their metadata
      properties:
        metadata:
          items:
            properties:
              age_days:
                $ref: '#/components/schemas/DownloadField'
              age_group:
                $ref: '#/components/schemas/DownloadField'
              age_months:
                $ref: '#/components/schemas/DownloadField'
              age_weeks:
                $ref: '#/components/schemas/DownloadField'
              age_years:
                $ref: '#/components/schemas/DownloadField'
              ampicillin:
                $ref: '#/components/schemas/DownloadField'
              ampicillin_method:
                $ref: '#/components/schemas/DownloadField'
              apgar_score:
                $ref: '#/components/schemas/DownloadField'
              birth_weight_gram:
                $ref: '#/components/schemas/DownloadField'
              cefazolin:
                $ref: '#/components/schemas/DownloadField'
              cefazolin_method:
                $ref: '#/components/schemas/DownloadField'
              cefotaxime:
                $ref: '#/components/schemas/DownloadField'
              cefotaxime_method:
                $ref: '#/components/schemas/DownloadField'
              cefoxitin:
                $ref: '#/components/schemas/DownloadField'
              cefoxitin_method:
                $ref: '#/components/schemas/DownloadField'
              ceftizoxime:
                $ref: '#/components/schemas/DownloadField'
              ceftizoxime_method:
                $ref: '#/components/schemas/DownloadField'
              ciprofloxacin:
                $ref: '#/components/schemas/DownloadField'
              ciprofloxacin_method:
                $ref: '#/components/schemas/DownloadField'
              city:
                $ref: '#/components/schemas/DownloadField'
              clindamycin:
                $ref: '#/components/schemas/DownloadField'
              clindamycin_method:
                $ref: '#/components/schemas/DownloadField'
              collection_day:
                $ref: '#/components/schemas/DownloadField'
              collection_month:
                $ref: '#/components/schemas/DownloadField'
              collection_year:
                $ref: '#/components/schemas/DownloadField'
              country:
                $ref: '#/components/schemas/DownloadField'
              county_state:
                $ref: '#/components/schemas/DownloadField'
              daptomycin:
                $ref: '#/components/schemas/DownloadField'
              daptomycin_method:
                $ref: '#/components/schemas/DownloadField'
              disease_onset:
                $ref: '#/components/schemas/DownloadField'
              disease_type:
                $ref: '#/components/schemas/DownloadField'
              erythromycin:
                $ref: '#/components/schemas/DownloadField'
              erythromycin_method:
                $ref: '#/components/schemas/DownloadField'
              gender:
                $ref: '#/components/schemas/DownloadField'
              gestational_age_weeks:
                $ref: '#/components/schemas/DownloadField'
              host_species:
                $ref: '#/components/schemas/DownloadField'
              host_status:
                $ref: '#/components/schemas/DownloadField'
              infection_during_pregnancy:
                $ref: '#/components/schemas/DownloadField'
              isolation_source:
                $ref: '#/components/schemas/DownloadField'
              lane_id:
                $ref: '#/components/schemas/DownloadField'
              levofloxacin:
                $ref: '#/components/schemas/DownloadField'
              levofloxacin_method:
                $ref: '#/components/schemas/DownloadField'
              linezolid:
                $ref: '#/components/schemas/DownloadField'
              linezolid_method:
                $ref: '#/components/schemas/DownloadField'
              maternal_infection_type:
                $ref: '#/components/schemas/DownloadField'
              penicillin:
                $ref: '#/components/schemas/DownloadField'
              penicillin_method:
                $ref: '#/components/schemas/DownloadField'
              public_name:
                $ref: '#/components/schemas/DownloadField'
              sanger_sample_id:
                $ref: '#/components/schemas/DownloadField'
              selection_random:
                $ref: '#/components/schemas/DownloadField'
              serotype:
                $ref: '#/components/schemas/DownloadField'
              serotype_method:
                $ref: '#/components/schemas/DownloadField'
              study_name:
                $ref: '#/components/schemas/DownloadField'
              study_ref:
                $ref: '#/components/schemas/DownloadField'
              submitting_institution:
                $ref: '#/components/schemas/DownloadField'
              supplier_sample_name:
                $ref: '#/components/schemas/DownloadField'
              tetracycline:
                $ref: '#/components/schemas/DownloadField'
              tetracycline_method:
                $ref: '#/components/schemas/DownloadField'
              vancomycin:
                $ref: '#/components/schemas/DownloadField'
              vancomycin_method:
                $ref: '#/components/schemas/DownloadField'
            required:
            - public_name
            - sanger_sample_id
            - supplier_sample_name
            - lane_id
            - study_name
            - study_ref
            - submitting_institution
            - selection_random
            - country
            - county_state
            - city
            - collection_year
            - collection_month
            - collection_day
            - host_species
            - gender
            - age_group
            - age_years
            - age_months
            - age_weeks
            - age_days
            - host_status
            - disease_type
            - disease_onset
            - isolation_source
            - infection_during_pregnancy
            - maternal_infection_type
            - gestational_age_weeks
            - birth_weight_gram
            - apgar_score
            - serotype
            - serotype_method
            - ceftizoxime
            - ceftizoxime_method
            - cefoxitin
            - cefoxitin_method
            - cefotaxime
            - cefotaxime_method
            - cefazolin
            - cefazolin_method
            - ampicillin
            - ampicillin_method
            - penicillin
            - penicillin_method
            - erythromycin
            - erythromycin_method
            - clindamycin
            - clindamycin_method
            - tetracycline
            - tetracycline_method
            - levofloxacin
            - levofloxacin_method
            - ciprofloxacin
            - ciprofloxacin_method
            - daptomycin
            - daptomycin_method
            - vancomycin
            - vancomycin_method
            - linezolid
            - linezolid_method
            type: object
          type: array
      type: object
    MetadataFieldName:
      description: Valid metadata field name (alphanumeric and underscore only)
      maxLength: 256
      minLength: 1
      pattern: ^public_name|sanger_sample_id|supplier_sample_name|lane_id|study_name|study_ref|submitting_institution|selection_random|country|county_state|city|collection_year|collection_month|collection_day|host_species|gender|age_group|age_years|age_months|age_weeks|age_days|host_status|disease_type|disease_onset|isolation_source|infection_during_pregnancy|maternal_infection_type|gestational_age_weeks|birth_weight_gram|apgar_score|serotype|serotype_method|ceftizoxime|ceftizoxime_method|cefoxitin|cefoxitin_method|cefotaxime|cefotaxime_method|cefazolin|cefazolin_method|ampicillin|ampicillin_method|penicillin|penicillin_method|erythromycin|erythromycin_method|clindamycin|clindamycin_method|tetracycline|tetracycline_method|levofloxacin|levofloxacin_method|ciprofloxacin|ciprofloxacin_method|daptomycin|daptomycin_method|vancomycin|vancomycin_method|linezolid|linezolid_method$
      type: string
    MetadataFieldsList:
      items:
        $ref: '#/components/schemas/MetadataFieldName'
      minItems: 1
      type: array
    MetadataFilters:
      example:
        name: serotype
        values:
        - Ia
        - Ib
        - II
      properties:
        name:
          $ref: '#/components/schemas/MetadataFieldName'
          description: The name of the metadata field
        values:
          items:
            $ref: '#/components/schemas/FieldValueFilter'
            description: List of desired values of the metadata field
          minItems: 1
          type: array
      type: object
    QCData:
      description: Object containing an array of lane ids and their QC data
      properties:
        qcdata:
          items:
            properties:
              lane_id:
                $ref: '#/components/schemas/DownloadField'
              rel_abun_sa:
                $ref: '#/components/schemas/DownloadField'
            required:
            - lane_id
            - rel_abun_sa
            type: object
          type: array
      type: object
    QCDataFieldName:
      description: Valid QC data field name (alphanumeric and underscore only)
      maxLength: 256
      minLength: 1
      pattern: ^lane_id|rel_abun_sa$
      type: string
    QCDataFieldsList:
      items:
        $ref: '#/components/schemas/QCDataFieldName'
      minItems: 1
      type: array
    QCDataInput:
      description: QC data update for a single lane
      example:
        lane_id: 39214_1#341
        rel_abun_sa: 80.74
      properties:
        lane_id:
          maxLength: 16
          minLength: 3
          pattern: ^[0-9_#]+$
          type: string
        rel_abun_sa:
          format: float
          maximum: 100
          minimum: 0
          type: number
      required:
      - lane_id
      type: object
    QCDataUpdates:
      description: A list of dictionaries of QC data
      items:
        $ref: '#/components/schemas/QCDataInput'
      type: array
    Samples:
      example:
      - 5903STDY8059122
      - 5903STDY8059054
      items:
        maxLength: 256
        minLength: 1
        pattern: ^[a-zA-Z0-9]*$
        type: string
      minItems: 1
      type: array
    Spreadsheet:
      description: File path to spreadsheet
      properties:
        spreadsheet:
          format: binary
          type: string
      type: object
    ValidationErrors:
      description: Error response
      properties:
        validationerror:
          items:
            type: string
          minItems: 0
          readOnly: true
          type: array
      type: object
