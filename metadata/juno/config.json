{
  "MAX_CONTENT_LENGTH": 1048576,
  "logging_config": {
    "version": 1,
    "formatters": {
      "default": {
        "format": "[%(asctime)s] %(levelname)s in %(module)s: %(message)s"
      }
    },
    "handlers": {
      "wsgi": {
        "class": "logging.StreamHandler",
        "stream": "ext://flask.logging.wsgi_errors_stream",
        "formatter": "default"
      }
    },
    "flask_cors": {
      "level": "DEBUG",
      "handlers": [
        "wsgi"
      ]
    },
    "root": {
      "level": "DEBUG",
      "handlers": [
        "wsgi"
      ]
    }
  },
  "monocle_database_config_file": "my.cnf",
  "cors": {
    "regex": [
      "http://localhost:*",
      "http://127.0.0.1:*",
      "http://0.0.0.0:*"
    ]
  },
  "metadata": {
    "spreadsheet_header_row_position": 2,
    "upload_validation_enabled": true,
    "spreadsheet_definition": {
      "sanger_sample_id": {
        "title": "Sanger_Sample_ID",
        "mandatory": true,
        "max_length": 256,
        "regex": "^[0-9a-zA-Z\\-_]+$",
        "regex_validation_message": "contains illegal characters"
      },
      "supplier_sample_name": {
        "title": "Supplier_Sample_Name",
        "mandatory": true,
        "max_length": 20,
        "regex": "^[0-9a-zA-Z\\-_\\.]+$",
        "regex_validation_message": "contains illegal characters"
      },
      "public_name": {
        "title": "Public_Name",
        "mandatory": true,
        "max_length": 256,
        "regex": "^[0-9a-zA-Z\\-_\\. ]+$",
        "regex_validation_message": "contains illegal characters"
      },
      "lane_id": {
        "title": "Lane_ID",
        "max_length": 256,
        "regex": "^\\d+_\\d+#\\d+$",
        "regex_validation_message": "is not a recognised lane Id format"
      },
      "study_name": {
        "title": "Study_Name",
        "max_length": 600,
        "regex": "^[\\w\\-_:#\\.%\\(\\)\\[\\]/, ]+$",
        "regex_validation_message": "contains illegal characters"
      },
      "study_ref": {
        "title": "Study_Reference",
        "max_length": 400,
        "regex": "^PMID: \\d{7,8}(,{1}[ ]{0,1}PMID: \\d{7,8})*$",
        "regex_validation_message": "must be a comma-separated list of study references, e.g. PMID: 1234567, PMID: 23456789"
      },
      "selection_random": {
        "title": "Selection_Random",
        "max_length": 10,
        "allowed_values": ["yes", "no"],
        "convert_case": {
          "case": "lower"
        }
      },
      "country": {
        "title": "Country",
        "max_length": 90
      },
      "county_state": {
        "title": "County/state",
        "max_length": 200
      },
      "city": {
        "title": "City",
        "max_length": 200
      },
      "submitting_institution": {
        "title": "Submitting_Institution",
        "mandatory": true
      },
      "collection_year": {
        "title": "Collection_year",
        "regex": "(?i)^\\d{4}$",
        "regex_validation_message": "must be a YYYY format year"
      },
      "collection_month": {
        "title": "Collection_month",
        "regex": "(?i)^\\d{1,2}$",
        "regex_validation_message": "must be a MM format month"
      },
      "collection_day": {
        "title": "Collection_day",
        "regex": "(?i)^\\d{1,2}$",
        "regex_validation_message": "must be a DD format day"
      },
      "host_species": {
        "title": "Host_species",
        "max_length": 100,
        "allowed_values": ["human", "bovine", "fish", "goat", "camel", "other"],
        "convert_case": {
          "case": "lower"
        }
      },
      "gender": {
        "title": "Gender",
        "max_length": 10,
        "allowed_values": ["M", "F"],
        "convert_case": {
          "case": "upper"
        }
      },
      "age_group": {
        "title": "Age_group",
        "max_length": 30,
        "allowed_values": ["neonate", "infant", "child", "adolescent", "adult", "other"],
        "convert_case": {
          "case": "lower"
        }
      },
      "age_years": {
        "title": "Age_years",
        "regex": "(?i)^\\d{1,3}$",
        "regex_validation_message": "should be a valid 1 to 3 digit number"
      },
      "age_months": {
        "title": "Age_months",
        "regex": "(?i)^\\d{1,4}$",
        "regex_validation_message": "should be a valid 1 to 4 digit number"
      },
      "age_weeks": {
        "title": "Age_weeks",
        "regex": "(?i)^\\d{1,4}$",
        "regex_validation_message": "should be a valid 1 to 4 digit number"
      },
      "age_days": {
        "title": "Age_days",
        "regex": "(?i)^\\d{1,5}$",
        "regex_validation_message": "should be a valid 1 to 5 digit number"
      },
      "host_status": {
        "title": "Host_status",
        "max_length": 256,
        "allowed_values": ["carriage", "invasive disease", "non-invasive disease"],
        "convert_case": {
          "case": "lower"
        }
      },
      "disease_type": {
        "title": "Disease_type",
        "max_length": 100,
        "allowed_values": ["sepsis", "bacteraemia", "meningitis", "pneumonia", "urinary tract infection",
          "skin and soft-tissue infection", "osteomyelitis", "endocarditis", "septic arthritis", "chorioamnionitis",
          "peritonitis", "empyema", "surgical site infection", "urosepsis", "endometritis", "mastitis",
          "septicaemia", "invasive other", "non-invasive other"],
        "convert_case": {
          "case": "lower"
        }
      },
      "disease_onset": {
        "title": "Disease_onset",
        "max_length": 10,
        "allowed_values": ["EOD", "LOD", "VLOD", "other"],
        "convert_case": {
          "case": "lower",
          "preserve": ["EOD", "LOD", "VLOD"]
        }
      },
      "isolation_source": {
        "title": "Isolation_source",
        "max_length": 100,
        "allowed_values": ["rectovaginal swab", "vaginal swab", "ear swab", "umbilical swab", "umbilical swab",
          "throat swab", "skin swab", "rectal swab", "placenta", "blood", "cerebrospinal fluid", "cord blood",
          "pus: skin infection", "pus: brain abscess", "pus: other abscess", "sputum", "urine", "pleural fluid",
          "peritoneal fluid", "pericardial fluid", "joint/synovial fluid", "bone", "lymph node", "semen", "milk",
          "spleen", "kidney", "liver", "brain", "heart", "pancreas", "other sterile site", "other non-sterile site",
          "abscess", "abscess/pus fluid", "aspirate fluid", "blood vessels", "bronchoalveolar lavage", "burn",
          "cellulitis/erysipelas", "decubitus", "drains/tubes", "endotracheal aspirate", "furuncle", "gall bladder",
          "impetiginous lesions", "lungs", "muscle tissue", "prostate", "skin ulcer", "spinal cord", "stomach",
          "thoracentesis fluid", "tissue fluid", "trachea", "ulcer fluid", "urethra", "urinary bladder", "uterus",
          "wound"],
        "convert_case": {
          "case": "lower"
        }
      },
      "serotype": {
        "title": "Serotype",
        "max_length": 7,
        "allowed_values": ["Ia", "Ib", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "NT"]
      },
      "serotype_method": {
        "title": "Serotype_method",
        "max_length": 100,
        "regex": "(?i)^latex agglutination|Lancefield|PCR|other(, latex agglutination|Lancefield|PCR|other)*$",
        "regex_validation_message": "is not in the list of legal options (latex agglutination, Lancefield, PCR, other)",
        "convert_case": {
          "case": "lower",
          "preserve": ["Lancefield", "PCR"]
        }
      },
      "infection_during_pregnancy": {
        "title": "Infection_during_pregnancy",
        "max_length": 10,
        "allowed_values": ["yes", "no"],
        "convert_case": {
          "case": "lower"
        }
      },
      "maternal_infection_type": {
        "title": "Maternal_infection_type",
        "max_length": 100,
        "allowed_values": ["urinary tract infection", "chorioamnionitis/intrauterine infection", "sepsis", "meningitis",
          "arthritis", "skin and soft-tissue infection", "invasive other", "non-invasive other"],
        "convert_case": {
          "case": "lower"
        }
      },
      "gestational_age_weeks": {
        "title": "Gestational_age_weeks",
        "regex": "(?i)^\\d{1,3}$",
        "regex_validation_message": "should be a valid 1 to 3 digit number",
        "convert_case": {
          "case": "lower"
        }
      },
      "birth_weight_gram": {
        "title": "Birthweight_gram",
        "regex": "(?i)^\\d{1,7}$",
        "regex_validation_message": "should be a valid 1 to 7 digit number",
        "convert_case": {
          "case": "lower"
        }
      },
      "apgar_score": {
        "title": "Apgar_score",
        "regex": "(?i)^[0-9]|10$",
        "regex_validation_message": "should be a valid number between 0 and 10",
        "convert_case": {
          "case": "lower"
        }
      },
      "ceftizoxime": {
        "title": "Ceftizoxime",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "ceftizoxime_method": {
        "title": "Ceftizoxime_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "cefoxitin": {
        "title": "Cefoxitin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "cefoxitin_method": {
        "title": "Cefoxitin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "cefotaxime": {
        "title": "Cefotaxime",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "cefotaxime_method": {
        "title": "Cefotaxime_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "cefazolin": {
        "title": "Cefazolin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "cefazolin_method": {
        "title": "Cefazolin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "ampicillin": {
        "title": "Ampicillin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "ampicillin_method": {
        "title": "Ampicillin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "penicillin": {
        "title": "Penicillin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "penicillin_method": {
        "title": "Penicillin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "erythromycin": {
        "title": "Erythromycin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "erythromycin_method": {
        "title": "Erythromycin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "clindamycin": {
        "title": "Clindamycin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "clindamycin_method": {
        "title": "Clindamycin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "tetracycline": {
        "title": "Tetracycline",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "tetracycline_method": {
        "title": "Tetracycline_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "levofloxacin": {
        "title": "Levofloxacin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "levofloxacin_method": {
        "title": "Levofloxacin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "ciprofloxacin": {
        "title": "Ciprofloxacin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "ciprofloxacin_method": {
        "title": "Ciprofloxacin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "daptomycin": {
        "title": "Daptomycin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "daptomycin_method": {
        "title": "Daptomycin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "vancomycin": {
        "title": "Vancomycin",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "vancomycin_method": {
        "title": "Vancomycin_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      },
      "linezolid": {
        "title": "Linezolid",
        "max_length": 30,
        "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
        "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
      },
      "linezolid_method": {
        "title": "Linezolid_method",
        "max_length": 60,
        "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
        "convert_case": {
          "case": "lower",
          "preserve": ["Etest"]
        }
      }
    }
  },
  "in_silico_data": {
    "spreadsheet_header_row_position": 0,
    "upload_validation_enabled": true,
    "spreadsheet_definition": {
      "lane_id": {
        "title": "Sample_id",
        "mandatory": true,
        "max_length": 256,
        "regex": "^\\d+_\\d+#\\d+$",
        "regex_validation_message": "contains illegal characters"
      },
      "cps_type": {
        "title": "cps_type",
        "mandatory": true,
        "max_length": 20
      },
      "ST": {
        "title": "ST",
        "mandatory": true,
        "max_length": 20
      },
      "adhP": {
        "title": "adhP",
        "mandatory": true,
        "max_length": 20
      },
      "pheS": {
        "title": "pheS",
        "mandatory": true,
        "max_length": 20
      },
      "atr": {
        "title": "atr",
        "mandatory": true,
        "max_length": 20
      },
      "glnA": {
        "title": "glnA",
        "mandatory": true,
        "max_length": 20
      },
      "sdhA": {
        "title": "sdhA",
        "mandatory": true,
        "max_length": 20
      },
      "glcK": {
        "title": "glcK",
        "mandatory": true,
        "max_length": 20
      },
      "tkt": {
        "title": "tkt",
        "mandatory": true,
        "max_length": 20
      },
      "twenty_three_S1": {
        "title": "23S1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "twenty_three_S3": {
        "title": "23S3",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "AAC6APH2": {
        "title": "AAC6APH2",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "AADECC": {
        "title": "AADECC",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ANT6": {
        "title": "ANT6",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "APH3III": {
        "title": "APH3III",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "APH3OTHER": {
        "title": "APH3OTHER",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "CATPC194": {
        "title": "CATPC194",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "CATQ": {
        "title": "CATQ",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ERMA": {
        "title": "ERMA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ERMB": {
        "title": "ERMB",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ERMT": {
        "title": "ERMT",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "LNUB": {
        "title": "LNUB",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "LNUC": {
        "title": "LNUC",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "LSAC": {
        "title": "LSAC",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "MEFA": {
        "title": "MEFA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "MPHC": {
        "title": "MPHC",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "MSRA": {
        "title": "MSRA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "MSRD": {
        "title": "MSRD",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "FOSA": {
        "title": "FOSA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "GYRA": {
        "title": "GYRA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "PARC": {
        "title": "PARC",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "RPOBGBS_1": {
        "title": "RPOBGBS-1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "RPOBGBS_2": {
        "title": "RPOBGBS-2",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "RPOBGBS_3": {
        "title": "RPOBGBS-3",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "RPOBGBS_4": {
        "title": "RPOBGBS-4",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "SUL2": {
        "title": "SUL2",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "TETB": {
        "title": "TETB",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "TETL": {
        "title": "TETL",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "TETM": {
        "title": "TETM",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "TETO": {
        "title": "TETO",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "TETS": {
        "title": "TETS",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ALP1": {
        "title": "ALP1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ALP23": {
        "title": "ALP23",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "ALPHA": {
        "title": "ALPHA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "HVGA": {
        "title": "HVGA",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "PI1": {
        "title": "PI1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "PI2A1": {
        "title": "PI2A1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "PI2A2": {
        "title": "PI2A2",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "PI2B": {
        "title": "PI2B",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "RIB": {
        "title": "RIB",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "SRR1": {
        "title": "SRR1",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "SRR2": {
        "title": "SRR2",
        "mandatory": true,
        "max_length": 20,
        "regex": "^(^$|pos|neg)+$",
        "regex_validation_message": "must be pos, neg or empty"
      },
      "twenty_three_S1_variant": {
        "title": "23S1_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "twenty_three_S3_variant": {
        "title": "23S3_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "GYRA_variant": {
        "title": "GYRA_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "PARC_variant": {
        "title": "PARC_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "RPOBGBS_1_variant": {
        "title": "RPOBGBS-1_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "RPOBGBS_2_variant": {
        "title": "RPOBGBS-2_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "RPOBGBS_3_variant": {
        "title": "RPOBGBS-3_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      },
      "RPOBGBS_4_variant": {
        "title": "RPOBGBS-4_variant",
        "mandatory": true,
        "max_length": 100,
        "regex": "^(^$|[0-9a-zA-Z_\\-\\,*])+$",
        "regex_validation_message": "must contain comma-separated variants (e.g. T78Q,L55A), * for the common variant or empty"
      }
    }
  },
  "qc_data": {
    "spreadsheet_header_row_position": 0,
    "upload_validation_enabled": true,
    "spreadsheet_definition": {
         "lane_id": {
         "title": "Sample_id",
         "mandatory": true,
         "max_length": 256,
         "regex": "^\\d+_\\d+#\\d+$",
         "regex_validation_message": "contains illegal characters"
         },
         "rel_abun_sa": {
         "title": "rel_abun_sa",
         "mandatory": false,
         "max_length": 6,
         "regex": "^[1]?[0-9]?[0-9]\\.[0-9][0-9]?$"
         }
      }
   }
}
