{
  "MAX_CONTENT_LENGTH": 1048576,
  "logging_config": {
    "version": 1,
    "formatters": {
      "default": {
        "format": "[%(asctime)s] %(levelname)s in %(module)s: %(message)s"
      }
    },
    "handlers": {
      "wsgi": {
        "class": "logging.StreamHandler",
        "stream": "ext://flask.logging.wsgi_errors_stream",
        "formatter": "default"
      }
    },
    "flask_cors": {
      "level": "DEBUG",
      "handlers": [
        "wsgi"
      ]
    },
    "root": {
      "level": "DEBUG",
      "handlers": [
        "wsgi"
      ]
    }
  },
  "monocle_database_config_file": "my.cnf",
  "cors": {
    "regex": [
      "http://localhost:*",
      "http://127.0.0.1:*",
      "http://0.0.0.0:*"
    ]
  },
  "spreadsheet_header_row_position": 2,
  "upload_validation_enabled": true,
  "spreadsheet_definition": {
    "sanger_sample_id": {
      "title": "Sanger_Sample_ID",
      "mandatory": true,
      "max_length": 256,
      "regex": "^[0-9a-zA-Z\\-_]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "supplier_sample_name": {
      "title": "Supplier_Sample_Name",
      "mandatory": true,
      "max_length": 20,
      "regex": "^[0-9a-zA-Z_]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "public_name": {
      "title": "Public_Name",
      "mandatory": true,
      "max_length": 256,
      "regex": "^[0-9a-zA-Z\\-_ ]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "lane_id": {
      "title": "Lane_ID",
      "max_length": 256,
      "regex": "^\\d+_\\d+#\\d+$",
      "regex_validation_message": "is not a recognised lane Id format"
    },
    "study_name": {
      "title": "Study_Name",
      "max_length": 600,
      "regex": "^[0-9a-zA-Z\\-_, ]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "study_ref": {
      "title": "Study_Reference",
      "max_length": 400,
      "regex": "^PMID: \\d{7,8}(,{1}[ ]{0,1}PMID: \\d{7,8})*$",
      "regex_validation_message": "must be a comma-separated list of study references, e.g. PMID 1234567, PMID: 23456789"
    },
    "selection_random": {
      "title": "Selection_Random",
      "max_length": 10,
      "allowed_values": ["yes", "no"],
      "convert_case": {
        "case": "lower"
      }
    },
    "country": {
      "title": "Country",
      "mandatory": true,
      "max_length": 90
    },
    "county_state": {
      "title": "County/state",
      "max_length": 200,
      "regex": "^[0-9a-zA-Z\\'\\- ]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "city": {
      "title": "City",
      "max_length": 200,
      "regex": "^[0-9a-zA-Z\\'\\- ]+$",
      "regex_validation_message": "contains illegal characters"
    },
    "submitting_institution": {
      "title": "Submitting_Institution",
      "mandatory": true
    },
    "collection_year": {
      "title": "Collection_year",
      "max_length": 10,
      "regex": "(?i)^\\d{4}$|^unknown$",
      "regex_validation_message": "must be a YYYY format year or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "collection_month": {
      "title": "Collection_month",
      "max_length": 10,
      "regex": "(?i)^\\d{1,2}$|^unknown$",
      "regex_validation_message": "must be a MM format month or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "collection_day": {
      "title": "Collection_day",
      "max_length": 10,
      "regex": "(?i)^\\d{1,2}$|^unknown$",
      "regex_validation_message": "must be a DD format day or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "host_species": {
      "title": "Host_species",
      "max_length": 100,
      "allowed_values": ["human", "bovine", "fish", "camel", "other", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "gender": {
      "title": "Gender",
      "max_length": 10,
      "allowed_values": ["M", "F", "unknown"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["M", "F"]
      }
    },
    "age_group": {
      "title": "Age_group",
      "max_length": 30,
      "allowed_values": ["neonate", "infant", "child", "adolescent", "adult", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "age_years": {
      "title": "Age_years",
      "max_length": 10,
      "regex": "(?i)^\\d{1,3}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "age_months": {
      "title": "Age_months",
      "max_length": 10,
      "regex": "(?i)^[0-9]{1,2}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "age_weeks": {
      "title": "Age_weeks",
      "max_length": 10,
      "regex": "(?i)^[0-9]{1,2}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "age_days": {
      "title": "Age_days",
      "max_length": 10,
      "regex": "(?i)^[0-9]{1,2}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "host_status": {
      "title": "Host_status",
      "max_length": 256,
      "allowed_values": ["carriage", "invasive disease", "non-invasive disease", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "disease_type": {
      "title": "Disease_type",
      "max_length": 100,
      "allowed_values": ["sepsis", "bacteraemia", "meningitis", "pneumonia", "urinary tract infection",
        "skin and soft-tissue infection", "osteomyelitis", "endocarditis", "septic arthritis", "chorioamnionitis",
        "peritonitis", "empyema", "surgical site infection", "urosepsis", "endometritis", "mastitis",
        "septicaemia", "invasive other", "non-invasive other", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "disease_onset": {
      "title": "Disease_onset",
      "max_length": 10,
      "allowed_values": ["EOD", "LOD", "VLOD", "other", "unknown"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["EOD", "LOD", "VLOD"]
      }
    },
    "isolation_source": {
      "title": "Isolation_source",
      "max_length": 100,
      "allowed_values": ["rectovaginal swab", "vaginal swab", "ear swab", "umbilical swab", "umbilical swab",
        "throat swab", "skin swab", "rectal swab", "placenta", "blood", "cerebrospinal fluid", "cord blood",
        "pus: skin infection", "pus: brain abscess", "pus: other abscess", "sputum", "urine", "pleural fluid",
        "peritoneal fluid", "pericardial fluid", "joint/synovial fluid", "bone", "lymph node", "semen", "milk",
        "spleen", "kidney", "liver", "brain", "heart", "pancreas", "other sterile site", "other non-sterile site",
        "abscess", "abscess/pus fluid", "aspirate fluid", "blood vessels", "bronchoalveolar lavage", "burn",
        "cellulitis/erysipelas", "decubitus", "drains/tubes", "endotracheal aspirate", "furuncle", "gall bladder",
        "impetiginous lesions", "lungs", "muscle tissue", "prostate", "skin ulcer", "spinal cord", "stomach",
        "thoracentesis fluid", "tissue fluid", "trachea", "ulcer fluid", "urethra", "urinary bladder", "uterus",
        "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "serotype": {
      "title": "Serotype",
      "max_length": 7,
      "allowed_values": ["Ia", "Ib", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "NT"]
    },
    "serotype_method": {
      "title": "Serotype_method",
      "max_length": 100,
      "regex": "(?i)^latex agglutination|Lancefield|PCR|other|unknown(, latex agglutination|Lancefield|PCR|other)*$",
      "regex_validation_message": "is not in the list of legal options (latex agglutination, Lancefield, PCR, other, unknown)",
      "convert_case": {
        "case": "lower",
        "exclusions": ["Lancefield", "PCR"]
      }
    },
    "infection_during_pregnancy": {
      "title": "Infection_during_pregnancy",
      "max_length": 10,
      "allowed_values": ["yes", "no", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "maternal_infection_type": {
      "title": "Maternal_infection_type",
      "max_length": 100,
      "allowed_values": ["urinary tract infection", "chorioamnionitis/intrauterine infection", "sepsis", "meningitis",
        "arthritis", "skin and soft-tissue infection", "invasive other", "non-invasive other", "unknown"],
      "convert_case": {
        "case": "lower"
      }
    },
    "gestational_age_weeks": {
      "title": "Gestational_age_weeks",
      "max_length": 10,
      "regex": "(?i)^\\d{1,2}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "birth_weight_gram": {
      "title": "Birthweight_gram",
      "max_length": 10,
      "regex": "(?i)^\\d{1,3}$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "apgar_score": {
      "title": "Apgar_score",
      "max_length": 10,
      "regex": "(?i)^[1-9]|10$|^unknown$",
      "regex_validation_message": "should be a valid number or 'unknown'",
      "convert_case": {
        "case": "lower"
      }
    },
    "ceftizoxime": {
      "title": "Ceftizoxime",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "ceftizoxime_method": {
      "title": "Ceftizoxime_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "cefoxitin": {
      "title": "Cefoxitin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "cefoxitin_method": {
      "title": "Cefoxitin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "cefotaxime": {
      "title": "Cefotaxime",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "cefotaxime_method": {
      "title": "Cefotaxime_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "cefazolin": {
      "title": "Cefazolin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "cefazolin_method": {
      "title": "Cefazolin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "ampicillin": {
      "title": "Ampicillin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "ampicillin_method": {
      "title": "Ampicillin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "penicillin": {
      "title": "Penicillin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "penicillin_method": {
      "title": "Penicillin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "erythromycin": {
      "title": "Erythromycin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "erythromycin_method": {
      "title": "Erythromycin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "clindamycin": {
      "title": "Clindamycin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "clindamycin_method": {
      "title": "Clindamycin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "tetracycline": {
      "title": "Tetracycline",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "tetracycline_method": {
      "title": "Tetracycline_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "levofloxacin": {
      "title": "Levofloxacin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "levofloxacin_method": {
      "title": "Levofloxacin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "ciprofloxacin": {
      "title": "Ciprofloxacin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "ciprofloxacin_method": {
      "title": "Ciprofloxacin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "daptomycin": {
      "title": "Daptomycin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "daptomycin_method": {
      "title": "Daptomycin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "vancomycin": {
      "title": "Vancomycin",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "vancomycin_method": {
      "title": "Vancomycin_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    },
    "linezolid": {
      "title": "Linezolid",
      "max_length": 30,
      "regex": "^(?:\\d+(?:\\.\\d*)?|\\.\\d+)$|^[S|I|R]{1}$",
      "regex_validation_message": "should be a valid floating point number or alternatively S, I, or R"
    },
    "linezolid_method": {
      "title": "Linezolid_method",
      "max_length": 60,
      "allowed_values": ["disk diffusion", "broth dilution", "agar dilution", "Etest"],
      "convert_case": {
        "case": "lower",
        "exclusions": ["Etest"]
      }
    }
  }
}
