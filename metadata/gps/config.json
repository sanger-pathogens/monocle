{
   "MAX_CONTENT_LENGTH": 1048576,
   "logging_config": {
      "version": 1,
      "formatters": {
         "default": {
            "format": "[%(asctime)s] %(levelname)s in %(module)s: %(message)s"
         }
      },
      "handlers": {
         "wsgi": {
            "class": "logging.StreamHandler",
            "stream": "ext://flask.logging.wsgi_errors_stream",
            "formatter": "default"
         }
      },
      "flask_cors": {
         "level": "DEBUG",
         "handlers": [
            "wsgi"
         ]
      },
      "root": {
         "level": "DEBUG",
         "handlers": [
            "wsgi"
         ]
      }
   },
   "monocle_database_config_file": "my.cnf",
   "cors": {
      "regex": [
         "http://localhost:*",
         "http://127.0.0.1:*",
         "http://0.0.0.0:*"
      ]
   },
   "metadata": {
      "spreadsheet_header_row_position": 2,
      "upload_validation_enabled": true,
      "spreadsheet_definition": {
         "sanger_sample_id": {
            "title": "Sanger_sample_id",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z]+)$",
            "regex_validation_message": "must not contain illegal characters"
         },
         "sample_name": {
            "title": "Sample_name",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z\\-_\\.]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "public_name": {
            "title": "Public_name",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z\\-_\\.]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "study_name": {
            "title": "Study_name",
            "mysql_type": "VARCHAR(600)",
            "max_length": 600,
            "regex": "^(?:[\\w\\-_:#\\.%\\(\\)\\[\\]/, ]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "submitting_institution": {
            "title": "Submitting_institution",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256
         },
         "selection_random": {
            "title": "Selection_Random",
            "mysql_type": "VARCHAR(10) DEFAULT NULL",
            "max_length": 10,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "continent": {
            "title": "Continent",
            "mysql_type": "VARCHAR(90)",
            "max_length": 90
         },
         "country": {
            "title": "Country",
            "mysql_type": "VARCHAR(90)",
            "max_length": 90
         },
         "region": {
            "title": "Region",
            "mysql_type": "VARCHAR(90)",
            "max_length": 90
         },
         "city": {
            "title": "City",
            "mysql_type": "VARCHAR(200)",
            "max_length": 200
         },
         "facility_where_collected": {
            "title": "Facility_where_collected",
            "mysql_type": "VARCHAR(256) DEFAULT NULL",
            "max_length": 256
         },
         "month_collection": {
            "title": "Month_collection",
            "mysql_type": "VARCHAR(10) DEFAULT NULL",
            "max_length": 10,
            "allowed_values": [
               "JAN",
               "FEB",
               "MAR",
               "APR",
               "MAY",
               "JUN",
               "JUL",
               "AUG",
               "SEP",
               "OCT",
               "NOV",
               "DEC"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "year_collection": {
            "title": "Year_collection",
            "mysql_type": "SMALLINT(4)",
            "max_length": 10,
            "regex": "^(?:\\d{4})$",
            "regex_validation_message": "must be a YYYY format year"
         },
         "gender": {
            "title": "Gender",
            "mysql_type": "VARCHAR(10) DEFAULT NULL",
            "max_length": 10,
            "allowed_values": [
               "M",
               "F"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "age_years": {
            "title": "Age_years",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:\\d+)$|^(?:<|>)?(?:=)?(?: |)?(?:\\d+(?:\\.\\d*)?(?:<=\\d+)?(?: )?(?:&)?(?: )?(?:<|>)?(?:\\d+)?)$",
            "regex_validation_message": "should be an integer; can be a decimal number; can include spaces; can include '>','<', '=', '&' symbols"
         },
         "age_months": {
            "title": "Age_months",
            "mysql_type": "DECIMAL(5,2)",
            "max_length": 6,
            "regex": "^(?:\\d+(?:\\.\\d{1,2})?)?$",
            "regex_validation_message": "should be an integer; can be a decimal (max 2 decimals)"
         },
         "age_days": {
            "title": "Age_days",
            "mysql_type": "SMALLINT(10)",
            "max_length": 10,
            "regex": "^(?:\\d+?)?$",
            "regex_validation_message": "should be an integer"
         },
         "clinical_manifestation": {
            "title": "Clinical_manifestation",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256,
            "allowed_values": [
               "ABSCESS",
               "ARTHRITIS",
               "BACTEREMIA",
               "BRONCHIAL ASTHMA",
               "BRONCHIOLITIS",
               "BRONCHITIS",
               "CARRIAGE",
               "CELLULITIS",
               "CONJUNCTIVITIS",
               "DISEASE",
               "EMPYEMA",
               "ENCEPHALITIS",
               "FEVER UNSPECIFIED",
               "JOINT INFECTION",
               "LEUKEMIA",
               "LOWER RESPIRATORY TRACT INFECTION",
               "MENINGITIS",
               "OSTEOMYELITIS",
               "OTHER",
               "OTITIS",
               "OTITIS MEDIA",
               "PERICARDITIS",
               "PERITONITIS",
               "PLEURAL EFFUSION",
               "PNEUMONIA",
               "SEPSIS",
               "SEPTIC ARTHRITIS",
               "SEPTICEMIA",
               "SINUSITIS",
               "SURGICAL SITE INFECTION",
               "UNKNOWN",
               "UNSPECIFIED",
               "UNSPECIFIED IPD"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "source": {
            "title": "Source",
            "mysql_type": "VARCHAR(100)",
            "max_length": 100,
            "allowed_values": [
               "ASCITIC FLUID",
               "BLOOD",
               "BRONCHIAL SECRETION",
               "CEREBROSPINAL FLUID",
               "CSF",
               "CSF & BLOOD",
               "EAR SWAB",
               "JOINT FLUID",
               "KNEE ASPIRATE",
               "LUNG ASPIRATE",
               "MIDDLE EAR FLUID",
               "NASOPHARYNGEAL SWAB",
               "OP SWAB",
               "OTHER",
               "PERITONEAL FLUID",
               "PLEURAL ASPIRATE",
               "PLEURAL FLUID",
               "PUS",
               "SPUTUM",
               "SYNOVIAL FLUID"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "HIV_status": {
            "title": "HIV_status",
            "mysql_type": "VARCHAR(10)",
            "max_length": 10,
            "allowed_values": [
               "P",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "underlying_conditions": {
            "title": "Underlying_conditions",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256,
            "allowed_values": [
               "CEREBROVASCULAR ACCIDENT",
               "CHEST INFECTION",
               "CONGENITAL HEART DISEASE",
               "DOWN SYNDROME",
               "EPILEPSY",
               "HIV EXPOSED",
               "KWASHIORKOR",
               "PRETERM",
               "SEIZURES",
               "SICKLE CELL DISEASE",
               "TUBEROSCLEROSIS"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "phenotypic_serotype_method": {
            "title": "Phenotypic_serotype_method",
            "mysql_type": "VARCHAR(100)",
            "max_length": 100,
            "allowed_values": [
               "LATEX AGGLUTINATION",
               "MICROARRAY",
               "NT",
               "PCR",
               "PCR AND QUELLUNG",
               "QUELLUNG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "phenotypic_serotype": {
            "title": "Phenotypic_serotype",
            "mysql_type": "VARCHAR(100)",
            "max_length": 100,
            "regex": "^(?:[A-Z0-9/\\(\\)\\-/\\&]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "sequence_type": {
            "title": "Sequence_Type",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256,
            "regex": "^[0-9]{1,5}$|^UNKNOWN$",
            "regex_validation_message": "contains illegal characters"
         },
         "penicillin": {
            "title": "Penicillin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_penicillin": {
            "title": "AST_method_Penicillin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "amoxicillin": {
            "title": "Amoxicillin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_amoxicillin": {
            "title": "AST_method_Amoxicillin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "cefotaxime": {
            "title": "Cefotaxime",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS or '_'"
         },
         "AST_method_cefotaxime": {
            "title": "AST_method_Cefotaxime",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "ceftriaxone": {
            "title": "Ceftriaxone",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_ceftriaxone": {
            "title": "AST_method_Ceftriaxone",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "cefuroxime": {
            "title": "Cefuroxime",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_cefuroxime": {
            "title": "AST_method_Cefuroxime",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "meropenem": {
            "title": "Meropenem",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_meropenem": {
            "title": "AST_method_Meropenem",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "erythromycin": {
            "title": "Erythromycin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_erythromycin": {
            "title": "AST_method_Erythromycin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "clindamycin": {
            "title": "Clindamycin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_clindamycin": {
            "title": "AST_method_Clindamycin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "trim_sulfa": {
            "title": "Trim_Sulfa",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_trim_sulfa": {
            "title": "AST_method_Trim_Sulfa",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "vancomycin": {
            "title": "Vancomycin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_vancomycin": {
            "title": "AST_method_Vancomycin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "linezolid": {
            "title": "Linezolid",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_linezolid": {
            "title": "AST_method_Linezolid",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "ciprofloxacin": {
            "title": "Ciprofloxacin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_ciprofloxacin": {
            "title": "AST_method_Ciprofloxacin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "chloramphenicol": {
            "title": "Chloramphenicol",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_chloramphenicol": {
            "title": "AST_method_Chloramphenicol",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "tetracycline": {
            "title": "Tetracycline",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_tetracycline": {
            "title": "AST_method_Tetracycline",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "levofloxacin": {
            "title": "Levofloxacin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_levofloxacin": {
            "title": "AST_method_Levofloxacin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "AGAR DILUTION",
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST",
               "OTHER"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "synercid": {
            "title": "Synercid",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_synercid": {
            "title": "AST_method_Synercid",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "rifampin": {
            "title": "Rifampin",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:<|>)?(?:=)?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:mm|(?:u|\u00b5|\u03bc|\u00b5)g/ml)?$|^[S|I|R]{1}$|^NS$",
            "regex_validation_message": "should be a valid floating point number; can start with '>','<', '>=' or '<=' and optionally end with units \"mm\" or \"\u00b5g/ml\" ('u' permitted in place of '\u00b5'); or alternatively S, I, R or NS"
         },
         "AST_method_rifampin": {
            "title": "AST_method_Rifampin",
            "mysql_type": "VARCHAR(60)",
            "max_length": 60,
            "allowed_values": [
               "BROTH DILUTION",
               "DISC DIFFUSION",
               "ETEST"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "aroE": {
            "title": "aroE",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "gdh": {
            "title": "gdh",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "gki": {
            "title": "gki",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "recP": {
            "title": "recP",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "spi": {
            "title": "spi",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNKNOWN$",
            "regex_validation_message": "must be an integer (max 3 digits), 'UNKNOWN'"
         },
         "xpt": {
            "title": "xpt",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "ddl": {
            "title": "ddl",
            "mysql_type": "SMALLINT(3)",
            "max_length": 3,
            "regex": "^\\d{1,3}$",
            "regex_validation_message": "must be an integer (max 3 digits)"
         },
         "comments": {
            "title": "Comments",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256
         },
         "vaccine_period": {
            "title": "Vaccine_period",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^POSTPCV\\d{1,2}-\\d{1,2}YR|^PREPCV$",
            "regex_validation_message": "should be 'PREPCV', 'POSTPCV#-#YR'"
         },
         "intro_year": {
            "title": "Introduction_year",
            "mysql_type": "SMALLINT(4)",
            "max_length": 4,
            "regex": "^\\d{4}$",
            "regex_validation_message": "must be a YYYY format year"
         },
         "PCV_type": {
            "title": "PCV_type",
            "mysql_type": "VARCHAR(100)",
            "max_length": 100,
            "regex": "^PCV\\d{1,2}$",
            "regex_validation_message": "should start with 'PCV' followed by a number"
         },
         "resolution": {
            "title": "Resolution",
            "mysql_type": "SMALLINT(1)",
            "max_length": 1,
            "regex": "^[0-2]$",
            "regex_validation_message": "must be an integer (range 0-2)"
         }
      }
   },
   "in_silico_data": {
      "spreadsheet_header_row_position": 0,
      "upload_validation_enabled": true,
      "spreadsheet_definition": {
         "lane_id": {
            "title": "Lane_id",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:\\d+_\\d+#\\d+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "public_name": {
            "title": "Public_name",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z\\-_\\.]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "sample": {
            "title": "Sanger_Sample_ID",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z]+)$",
            "regex_validation_message": "must not contain illegal characters"
         },
         "ERR": {
            "title": "ERR",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256,
            "regex": "^ERR\\d{7}$",
            "regex_validation_message": "must be a ERR accession number (ERR# format)"
         },
         "ERS": {
            "title": "ERS",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256,
            "regex": "^ERS\\d{7}$",
            "regex_validation_message": "must be a ERS accession number (ERS# format)"
         },
         "no_of_genome": {
            "title": "No_of_genome",
            "mysql_type": "SMALLINT(6) DEFAULT NULL"
         },
         "duplicate": {
            "title": "Duplicate",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "UNIQUE",
               "DUPLICATE"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "Paper_1": {
            "title": "Paper_1",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "YES",
               "NO"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "In_Silico_St": {
            "title": "In_silico_ST",
            "mysql_type": "VARCHAR(20) NOT NULL",
            "max_length": 20,
            "regex": "^\\d{1,5}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-5 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "aroE": {
            "title": "aroE",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "gdh": {
            "title": "gdh",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "gki": {
            "title": "gki",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "recP": {
            "title": "recP",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "spi": {
            "title": "spi",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "xpt": {
            "title": "xpt",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,3}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-3 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "ddl": {
            "title": "ddl",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^\\d{1,4}$|^UNDETERMINABLE$|^NEW$|^FAILED$",
            "regex_validation_message": "must be an integer (1-4 digits), 'UNDETERMINABLE', 'NEW', 'FAILED'"
         },
         "country": {
            "title": "Country",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256
         },
         "Continent": {
            "title": "Continent",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256
         },
         "Manifest_type": {
            "title": "Manifest_type",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "URI",
               "UNKNOWN",
               "NON_IPD",
               "NON_INVASIVE DISEASE",
               "IPD",
               "DIS_CAR",
               "CARRIAGE"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "children_under_5yrs": {
            "title": "Children_under_5yrs",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "UNKNOWN",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "GPSC": {
            "title": "GPSC",
            "mysql_type": "SMALLINT(4)",
            "max_length": 4,
            "regex": "^\\d{1,4}$",
            "regex_validation_message": "must be an integer (1-4 digits)"
         },
         "GPSC__colour": {
            "title": "GPSC__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA', or 'transparent' "
         },
         "In_silico_serotype": {
            "title": "In_silico_serotype",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30
         },
         "In_silico_serotype__colour": {
            "title": "In_silico_serotype__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA', 'transparent' "
         },
         "pbp1a": {
            "title": "pbp1a",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:\\d{1,3})$|^NEW$|^NF$",
            "regex_validation_message": "should be a valid 1 to 3 digit number; can be 'NEW' or 'NF'"
         },
         "pbp2b": {
            "title": "pbp2b",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:\\d{1,3})$|^NEW$|^NF$",
            "regex_validation_message": "should be a valid 1 to 3 digit number; can be 'NEW' or 'NF'"
         },
         "pbp2x": {
            "title": "pbp2x",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:\\d{1,3})$|^NEW$|^ERROR$|^NF$",
            "regex_validation_message": "should be a valid 1 to 3 digit number; can be 'NEW', 'ERROR' or 'NF'"
         },
         "WGS_PEN": {
            "title": "WGS_PEN",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_PEN_SIR_Meningitis": {
            "title": "WGS_PEN_SIR_Meningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_PEN_SIR_Nonmeningitis": {
            "title": "WGS_PEN_SIR_Nonmeningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_AMO": {
            "title": "WGS_AMO",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_AMO_SIR": {
            "title": "WGS_AMO_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_MER": {
            "title": "WGS_MER",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_MER_SIR": {
            "title": "WGS_MER_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_TAX": {
            "title": "WGS_TAX",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_TAX_SIR_Meningitis": {
            "title": "WGS_TAX_SIR_Meningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_TAX_SIR_Nonmeningitis": {
            "title": "WGS_TAX_SIR_Nonmeningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_CFT": {
            "title": "WGS_CFT",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_CFT_SIR_Meningitis": {
            "title": "WGS_CFT_SIR_Meningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_CFT_SIR_Nonmeningitis": {
            "title": "WGS_CFT_SIR_Nonmeningitis",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_CFX": {
            "title": "WGS_CFX",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?( )?(?:\\d+\\.)?(?:\\d+)$|^NF$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF'"
         },
         "WGS_CFX_SIR": {
            "title": "WGS_CFX_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_ERY": {
            "title": "WGS_ERY",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_ERY_SIR": {
            "title": "WGS_ERY_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_CLI": {
            "title": "WGS_CLI",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_CLI_SIR": {
            "title": "WGS_CLI_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_SYN": {
            "title": "WGS_SYN",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_SYN_SIR": {
            "title": "WGS_SYN_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_LZO": {
            "title": "WGS_LZO",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_LZO_SIR": {
            "title": "WGS_LZO_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_ERY_CLI": {
            "title": "WGS_ERY_CLI",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "NEG",
               "POS",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_COT": {
            "title": "WGS_COT",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_COT_SIR": {
            "title": "WGS_COT_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_TET": {
            "title": "WGS_TET",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_TET_SIR": {
            "title": "WGS_TET_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_DOX": {
            "title": "WGS_DOX",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_DOX_SIR": {
            "title": "WGS_DOX_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_LFX": {
            "title": "WGS_LFX",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_LFX_SIR": {
            "title": "WGS_LFX_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_CHL": {
            "title": "WGS_CHL",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_CHL_SIR": {
            "title": "WGS_CHL_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_RIF": {
            "title": "WGS_RIF",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_RIF_SIR": {
            "title": "WGS_RIF_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "WGS_VAN": {
            "title": "WGS_VAN",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^(?:[<>]=?)?( )?(?:\\d+\\.)?(?:\\d+)$|^NF$|^FLAG$",
            "regex_validation_message": "can be an integer or decimal; can bee preceeded by '<', '>', '<=' or '>='; can be 'NF' or 'FLAG'"
         },
         "WGS_VAN_SIR": {
            "title": "WGS_VAN_SIR",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "R",
               "I",
               "S",
               "NF",
               "FLAG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "EC": {
            "title": "EC",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30
         },
         "Cot": {
            "title": "Cot",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30
         },
         "Tet__autocolour": {
            "title": "Tet__autocolour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "TETO",
               "TETM:TETO",
               "TETM",
               "TET",
               "NEG"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "FQ__autocolour": {
            "title": "FQ__autocolour",
            "mysql_type": "VARCHAR(400)",
            "max_length": 400
         },
         "Other": {
            "title": "Other",
            "mysql_type": "VARCHAR(256)",
            "max_length": 256
         },
         "PBP1A_2B_2X__autocolour": {
            "title": "PBP1A_2B_2X__autocolour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30
         },
         "WGS_PEN_SIR_Meningitis__colour": {
            "title": "WGS_PEN_SIR_Meningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_PEN_SIR_Nonmeningitis__colour": {
            "title": "WGS_PEN_SIR_Nonmeningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA', 'transparent' "
         },
         "WGS_AMO_SIR__colour": {
            "title": "WGS_AMO_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_MER_SIR__colour": {
            "title": "WGS_MER_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_TAX_SIR_Meningitis__colour": {
            "title": "WGS_TAX_SIR_Meningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_TAX_SIR_Nonmeningitis__colour": {
            "title": "WGS_TAX_SIR_Nonmeningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_CFT_SIR_Meningitis__colour": {
            "title": "WGS_CFT_SIR_Meningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_CFT_SIR_Nonmeningitis__colour": {
            "title": "WGS_CFT_SIR_Nonmeningitis__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_CFX_SIR__colour": {
            "title": "WGS_CFX_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_ERY_SIR__colour": {
            "title": "WGS_ERY_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_CLI_SIR__colour": {
            "title": "WGS_CLI_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_SYN_SIR__colour": {
            "title": "WGS_SYN_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_LZO_SIR__colour": {
            "title": "WGS_LZO_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_COT_SIR__colour": {
            "title": "WGS_COT_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_TET_SIR__colour": {
            "title": "WGS_TET_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_DOX_SIR__colour": {
            "title": "WGS_DOX_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_LFX_SIR__colour": {
            "title": "WGS_LFX_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_CHL_SIR__colour": {
            "title": "WGS_CHL_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_RIF_SIR__colour": {
            "title": "WGS_RIF_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "WGS_VAN_SIR__colour": {
            "title": "WGS_VAN_SIR__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "ermB": {
            "title": "ermB",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "NEG",
               "POS"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "ermB__colour": {
            "title": "ermB__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "mefA": {
            "title": "mefA",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "NEG",
               "POS"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "mefA__colour": {
            "title": "mefA__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "folA_I100L": {
            "title": "folA_I100L",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "NEG",
               "POS"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "folA_I100L__colour": {
            "title": "folA_I100L__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "folP__autocolour": {
            "title": "folP__autocolour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30
         },
         "cat": {
            "title": "cat",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "NEG",
               "POS"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "cat__colour": {
            "title": "cat__colour",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "regex": "^#(?:[a-fA-F0-9]{6})$|^#N/A$|^transparent$",
            "regex_validation_message": "should be an hex colour code (format #000000), '#NA' or 'transparent' "
         },
         "PCV7": {
            "title": "PCV7",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "PCV10": {
            "title": "PCV10",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "PCV13": {
            "title": "PCV13",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "PCV15": {
            "title": "PCV15",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "PCV20": {
            "title": "PCV20",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "Pneumosil": {
            "title": "Pneumosil",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "Y",
               "N"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "Published": {
            "title": "Published",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "N",
               "Y"
            ],
            "convert_case": {
               "case": "upper"
            }
         }
      }
   },
   "qc_data": {
      "spreadsheet_header_row_position": 0,
      "upload_validation_enabled": true,
      "spreadsheet_definition": {
         "lane_id": {
            "title": "lane_id",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:\\d+_\\d+#\\d+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "supplier_name": {
            "title": "supplier_name",
            "mysql_type": "VARCHAR(256) NOT NULL",
            "mandatory": true,
            "max_length": 256,
            "regex": "^(?:[0-9a-zA-Z\\-_\\. ]+)$",
            "regex_validation_message": "contains illegal characters"
         },
         "Streptococcus_pneumoniae": {
            "title": "Streptococcus_pneumoniae",
            "mysql_type": "DECIMAL(5,2) CHECK (Streptococcus_pneumoniae>=0 AND Streptococcus_pneumoniae<=100)",
            "regex": "^(?:[1]?[0-9]?[0-9]\\.[0-9][0-9]?)$",
            "regex_validation_message": "must be a number between 0-100 (1 or 2 decimal places are needed)"
         },
         "total_length": {
            "title": "total_length",
            "mysql_type": "DECIMAL(5,2) CHECK (total_length>=0 AND total_length<=100)",
            "max_length": 6,
            "regex": "^(?:[1]?[0-9]?[0-9]\\.[0-9][0-9]?)$",
            "regex_validation_message": "must be a number between 0-100 (1 or 2 decimal places are needed)"
         },
         "No_contigs": {
            "title": "No_contigs",
            "mysql_type": "SMALLINT(5)",
            "regex": "^\\d{1,5}$",
            "regex_validation_message": "must be a 1-5 digits number (integer)"
         },
         "genome_covered": {
            "title": "genome_covered",
            "mysql_type": "DECIMAL(5,2) CHECK (genome_covered>=0 AND genome_covered<=100)",
            "max_length": 6,
            "regex": "^(?:[1]?[0-9]?[0-9]\\.[0-9][0-9]?)$",
            "regex_validation_message": "must be a number between 0-100 (1 or 2 decimal places are needed)"
         },
         "depth_of_coverage": {
            "title": "depth_of_coverage",
            "mysql_type": "DECIMAL(6,2) CHECK (depth_of_coverage>=0 AND depth_of_coverage<=2000)",
            "regex": "^(?:[1-2]?[0-9]?[0-9]?[0-9]\\.[0-9][0-9]?)$",
            "regex_validation_message": "must be a number between 0-2000 (1 or 2 decimal places are needed)"
         },
         "Proportion_of_Het_SNPs": {
            "title": "Proportion_of_Het_SNPs",
            "mysql_type": "DECIMAL(5,2) CHECK (Proportion_of_Het_SNPs>=0 AND Proportion_of_Het_SNPs<=100)",
            "max_length": 6,
            "regex": "^(?:[1]?[0-9]?[0-9]\\.[0-9][0-9]?)$",
            "regex_validation_message": "must be a number between 0-100 (1 or 2 decimal places are needed)"
         },
         "qc": {
            "title": "qc",
            "mysql_type": "VARCHAR(30)",
            "max_length": 30,
            "allowed_values": [
               "PASSPLUS",
               "PASS",
               "FAIL"
            ],
            "convert_case": {
               "case": "upper"
            }
         },
         "Hetsites_50bp": {
            "title": "Hetsites_50bp",
            "mysql_type": "SMALLINT(4)",
            "max_length": 4,
            "regex": "^(?:[1-5]?[0-9]?[0-9]?[0-9]?)$",
            "regex_validation_message": "must be an integer between 0-5000"
         }
      }
   },
   "project_links": {
      "name": "GPS Project",
      "logo_url": "/imgs/gps_banner.png",
      "project_url": "https://www.pneumogen.net/gps",
      "header_links": [
         {
            "label": "About",
            "url": "https://www.gbsgen.net/#about"
         },
         {
            "label": "Team",
            "url": "https://www.gbsgen.net/#team"
         },
         {
            "label": "Partners",
            "url": "https://www.gbsgen.net/#partners"
         },
         {
            "label": "News",
            "url": "https://www.gbsgen.net/#twitterFeed"
         },
         {
            "label": "Funders",
            "url": "https://www.gbsgen.net/#funders"
         }
      ],
      "contacts": [
         {
            "label": "Monocle Help",
            "url": "mailto:monocle-help@sanger.ac.uk"
         },
         {
            "label": "Stephen Bentley",
            "url": "mailto:sdb@sanger.ac.uk"
         }
      ],
      "upload_links": [
         {
            "label": "metadata",
            "url": "/metadata/gps/metadata-upload"
         },
         {
            "label": "in silico",
            "url": "/metadata/gps/in-silico-upload"
         },
         {
            "label": "qc data",
            "url": "/metadata/gps/qc-data-upload"
         }
      ]
   }
}